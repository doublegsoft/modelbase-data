<#import '/$/modelbase.ftl' as modelbase>
<#list model.objects as obj>
  <#if obj.persistenceName??>
    <#assign attrIds = []>
    <#assign attrNids = []>
    <#list obj.attributes as attr>
      <#if attr.persistenceName??>
        <#if attr.identifiable>
          <#assign attrIds = attrIds + [attr]>
        <#else>
          <#assign attrNids = attrNids + [attr]>
        </#if>
      </#if>
    </#list>
-- ${modelbase.get_object_persistence_text(obj)}
create table ${obj.persistenceName} (
    <#list attrIds as attr>
      <#assign domaintype = attr.constraint.domainType.name>
      <#if domaintype?index_of('&') == 0>
  ${attr.persistenceName?right_pad(24)} ${r"varchar(64)"?right_pad(24)} not null,
      <#else>
  ${attr.persistenceName?right_pad(24)} ${(typebase.typename(domaintype, "sql")!'varchar(64)')?right_pad(24)} not null,
      </#if>
    </#list>
    <#list attrNids as attr>
      <#assign domaintype = attr.constraint.domainType.toString()>
      <#if domaintype?index_of('&') == 0>
  ${attr.persistenceName?right_pad(24)} varchar(64)<#if attr?index != attrNids?size - 1>,</#if>
      <#else>
  ${attr.persistenceName?right_pad(24)} ${(typebase.typename(domaintype, "sql")!domaintype)}<#if attr?index != attrNids?size - 1>,</#if>
      </#if>
    </#list>
);

alter table ${obj.persistenceName} add constraint pk_${obj.persistenceName} primary key (<#list attrIds as attrId>${attrId.persistenceName}<#if attrId?index != attrIds?size - 1>,</#if></#list>);

    <#list obj.attributes as attr>
      <#if attr.persistenceName??>
exec sp_addextendedproperty 
@name = N'MS_Description', @value = '${modelbase.get_attribute_persistence_text(attr)}',
@level0type = N'Schema', @level0name = dbo, 
@level1type = N'Table',  @level1name = '${obj.persistenceName}', 
@level2type = N'Column', @level2name = '${attr.persistenceName}';
      </#if>
    </#list>
  </#if>
  
</#list>
